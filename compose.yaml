version: "3"

networks:
  internal:

# TODO
# kafka, postgres volumes

services:
  # https://hub.docker.com/r/bitnami/kafka/
  kafka:
    image: bitnami/kafka:3.5
    ports:
    - 9092:9092
    networks:
    - internal
    environment:
      KAFKA_CFG_NODE_ID: 0
      KAFKA_CFG_PROCESS_ROLES: controller,broker
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 0@kafka:9093
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
  postgres:
    image: postgres:latest
    ports:
    - 5432:5432 # !!! testing only
    networks:
    - internal
    environment:
      POSTGRES_USER: pg
      POSTGRES_PASSWORD: insecure
      POSTGRES_DB: dev
    # https://stackoverflow.com/a/72175755
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5
  pgmigrate:
    image: ghcr.io/peterldowns/pgmigrate:latest
    command: pgmigrate migrate
    # restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    networks:
    - internal
    volumes:
    - ./migrations:/migrations
    environment:
      PGM_MIGRATIONS: /migrations
      PGM_DATABASE: postgres://pg:insecure@postgres:5432/dev

  # https://doc.traefik.io/traefik/getting-started/quick-start/#launch-traefik-with-the-docker-provider
  # traefik:
  #   image: traefik:v3.1
  #   command: --providers.docker --api.insecure=true
  #   networks:
  #   - internal
  #   ports:
  #   - 80:80
  #   - 8080:8080 # api.insecure
  #   volumes:
  #   - /var/run/docker.sock:/var/run/docker.sock
  # service-messages:
  #   build: ./services/messages
  #   networks:
  #   - internal
  #   environment:
  #     KAFKA_URL: kafka:9092
  #     POSTGRES_URL: postgres://pg:insecure@postgres:5432/dev
  #   labels:
  #     - "traefik.http.routers.service-messages.rule=Path(`/message`)"
  # service-metrics:
  #   build: ./services/metrics
  #   networks:
  #   - internal
  #   labels:
  #     - "traefik.http.routers.service-metrics.rule=Path(`/metrics`)"
  #   environment:
  #     POSTGRES_URL: postgres://pg:insecure@postgres:5432/dev